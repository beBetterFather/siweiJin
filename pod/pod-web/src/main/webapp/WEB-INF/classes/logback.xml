<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
	<!--
       说明：
       1、日志级别及文件
           日志记录采用分级记录，级别与日志文件名相对应，不同级别的日志信息记录到不同的日志文件中
           例如：error级别记录到appName_error_xxx.log或appName_error.log（该文件为当前记录的日志文件），而appName_error_xxx.log为归档日志，
           日志文件按日期记录，同一天内，若日志文件大小等于或大于10M，则按0、1、2...顺序分别命名
           例如appName_level_2018-10-8_0.log
           其它级别的日志也是如此。
       2、文件路径
           若开发、测试用，在ide中运行项目，则到ide的安装路径查找logs文件夹，以相对路径../logs。
           若部署到Tomcat下，则在Tomcat下的logs文件中
       3、Appender
           FILEERROR对应error级别，文件名以appName_error_xxx.log形式命名
           FILEWARN对应warn级别，文件名以appName_warn_xxx.log形式命名
           FILEINFO对应info级别，文件名以appName_info_xxx.log形式命名
           FILEDEBUG对应debug级别，文件名以appName_debug_xxx.log形式命名
           stdout将日志信息输出到控制上，为方便开发测试使用
    -->
	<contextName>SpringBootDemo</contextName>
	<!--引入properties配置-->
	<property resource="properties/logback.properties"/>

	<!-- ERROR日志记录器，日期滚动记录 -->
	<appender name="FILEERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 正在记录的日志文件的路径及文件名 -->
		<file>${logback.logDir}/${logback.appName}_error.log</file>
		<!-- 日志记录器的滚动策略，按日期，按大小记录 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 归档的日志文件的路径，例如今天是2018-10-8日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。
            而2018-10-8的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
			<fileNamePattern>${logback.logDir}/error/${logback.appName}_error_%d{yyyy-MM-dd}_%i.log.zip</fileNamePattern>
			<!-- 除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始，
            命名日志文件，例如appName_error_2018-10-8_0.log.zip -->
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${logback.maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<!--表示只保存最近一个月的归档记录 -->
			<maxHistory>${logback.maxHistory}</maxHistory>
		</rollingPolicy>
		<!-- 追加方式记录日志 -->
		<append>true</append>
		<!-- 日志文件的格式 -->
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>===%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>
			<charset>utf-8</charset>
		</encoder>
		<!-- 此日志文件只记录error级别的 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>error</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- WARN级别日志记录器，日期滚动记录 -->
	<appender name="FILEWARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logback.logDir}/${logback.appName}_warn.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logback.logDir}/warn/${logback.appName}_warn_%d{yyyy-MM-dd}_%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${logback.maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${logback.maxHistory}</maxHistory>
		</rollingPolicy>
		<append>true</append>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>===%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>
			<charset>utf-8</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>warn</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- INFO级别日志记录器，日期滚动记录 -->
	<appender name="FILEINFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logback.logDir}/${logback.appName}_info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logback.logDir}/info/${logback.appName}_info_%d{yyyy-MM-dd}_%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${logback.maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${logback.maxHistory}</maxHistory>
		</rollingPolicy>
		<append>true</append>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>===%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>
			<charset>utf-8</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>info</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- DEBUG级别日志记录器，日期滚动记录 -->
	<appender name="FILEDEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logback.logDir}/${logback.appName}_debug.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logback.logDir}/info/${logback.appName}_debug_%d{yyyy-MM-dd}_%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${logback.maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${logback.maxHistory}</maxHistory>
		</rollingPolicy>
		<append>true</append>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>===%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>
			<charset>utf-8</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>debug</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- 控制台日志记录器（方便测试和开发）-->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!--encoder 默认配置为PatternLayoutEncoder-->
		<encoder>
			<pattern>===%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>
			<charset>utf-8</charset>
		</encoder>
		<!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息-->
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>debug</level>
		</filter>
	</appender>

	<!-- 异步日志记录器，用以输出控制台-->
	<appender name="ASYNCLOG" class="ch.qos.logback.classic.AsyncAppender">
		<appender-ref ref="STDOUT" />
		<queueSize>512</queueSize>
		<discardingThreshold>0</discardingThreshold>
	</appender>

	<!-- 具体jar包日志打印配置，根据情况进行配置 -->
	<logger name="org.springframework" level="WARN" />
	<logger name="org.hibernate" level="WARN" />

	<!-- 生产环境下，将此级别配置为适合的级别，以免日志文件太多或影响程序性能 -->
	<root level="DEBUG">
		<appender-ref ref="FILEERROR" />
		<appender-ref ref="FILEWARN" />
		<appender-ref ref="FILEINFO" />
		<!-- <appender-ref ref="FILEDEBUG"/> -->
		<appender-ref ref="ASYNCLOG" />
	</root>
</configuration>